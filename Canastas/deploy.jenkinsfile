def utilScript
def globalParameters
def parametersScript
def config

pipeline {
    agent any
    parameters {
        choice(name: "KBEnvironment", choices: ["EnvLocal", "EnvStable", "EnvRelease"], description: "Select KB Environment to Deploy")
        choice(name: "BuildAndroid", choices: ["True", "False"], description: "Build Android Platform")
        choice(name: "BuildIOS", choices: ["True", "False"], description: "Build iOS Platform")
    }
    stages {
        stage("Init") {
            steps {
                echo "Initializing.."
                script {
                    utilScript = load "common\\util.groovy"
                    parametersScript = load "Canastas\\parameters.groovy"
                    config = parametersScript.getForEnvironment(params.KBEnvironment)
                }
            }            
        }
        stage("Set Properties") {
            steps {
                echo "Setting Properties.."
            }
        }
        // stage("Update KB") {
        //     steps {
        //         echo "Updating KB.."
        //         script {

        //             withCredentials([usernamePassword(
        //                 credentialsId: 'credentials-genexusserver17', 
        //                 usernameVariable: 'USERNAME', 
        //                 passwordVariable: 'PASSWORD')]) {

        //                 config.GXServer.GXServerUsername = USERNAME
        //                 config.GXServer.GXServerPassword = PASSWORD
                             
        //                 def buildProps = utilScript.getMSBuildParams(config.General) + utilScript.getMSBuildParams(config.GXServer) 
        //                 bat "msbuild.exe ${buildProps} /tv:4.0 /verbosity:normal \"common\\update_kb.msbuild\""                 
                        
        //             }     
        //         }
        //     }
        // }
        // stage("Build All") {
        //     steps {
        //         echo "Building All.."
        //         script {
        //             def buildProps = utilScript.getMSBuildParams(config.General)
        //             bat "msbuild.exe ${buildProps} /tv:4.0 /verbosity:normal \"common\\build_kb.msbuild\""
        //         }
        //     }
        // }
        // stage("Package Deployment Units") {
        //     steps {
        //         echo "Packing Deployment Units.."
        //         script {                    
        //             config.DeploymentUnits.each { du ->
        //                 def duProps = utilScript.getMSBuildParams(config.General) + "/p:DeploymentUnit=\"${du.key}\" " + utilScript.getMSBuildParams(config.DeploymentUnits[du.key])
        //                 bat "msbuild.exe ${duProps} /tv:4.0 /verbosity:normal \"common\\prepare_deploy.msbuild\""
        //                 bat "msbuild.exe ${duProps} /tv:4.0 /verbosity:normal \"${config.General.EnvironmentWebFolder}\\${config.DeploymentUnits[du.key].DeployProjectName}.gxdproj\""
        //             }
        //         }
        //     }
        // }
        stage("Publish WebApps") {
            steps {
                script {   
                    config.DeploymentUnits.each { du ->
                        // if(config.DeploymentUnits[du.key].DeployApplicationCompiler == 'JAVA') {
                        //     bat utilScript.copyFile("${config.DeploymentUnits[du.key].DeployFullPath}.war", "${config.General.GitFolder}\\${config.DeploymentUnits[du.key].DeployWebappName}.war")
                        // }

                        bat "cd ${config.General.GitFolder}\\ git"
                        bat "cd ${config.General.GitFolder}\\ git add ${config.DeploymentUnits[du.key].DeployWebappName}.war"
                        bat "cd ${config.General.GitFolder}\\ git commit -am '${config.DeploymentUnits[du.key].DeployProjectName}'"
                        bat "cd ${config.General.GitFolder}\\ git push"                        
                    }


                }
            }
        }             
    }
}