def utilScript
def globalParameters
def parametersScript
def config

pipeline {
    agent any
    parameters {
        choice(name: "KBEnvironment", choices: ["EnvLocal", "EnvStable", "EnvRelease"], description: "Select KB Environment to Deploy")
        choice(name: "BuildAndroid", choices: ["True", "False"], description: "Build Android Platform")
        choice(name: "BuildIOS", choices: ["True", "False"], description: "Build iOS Platform")
    }
    environment {
        TEST_CREDENTIALS = credentials('credentials-genexusserver17')
    }
    stages {
        stage("Init") {
            steps {
                echo "Initializing.."
                echo "${TEST_CREDENTIALS}"
                script {
                    utilScript = load "common\\util.groovy"
                    parametersScript = load "Canastas\\${params.KBEnvironment}\\parameters.groovy"
                    config = parametersScript.getForEnvironment(params.KBEnvironment)
                    config.GXServer.GXServerUsername = "${TEST_CREDENTIALS_USR}"
                    config.GXServer.GXServerPassword = "${TEST_CREDENTIALS_PAS}"

                }
            }            
        }
        stage("Set Properties") {
            steps {
                echo "Setting Properties.."
            }
        }
        stage("Update KB") {
            steps {
                echo "Updating KB.."
                script {
                    def buildProps = utilScript.getMSBuildParams(config.General) + utilScript.getMSBuildParams(config.GXServer)
                    bat "msbuild.exe ${buildProps} /tv:4.0 /verbosity:normal \"common\\update_kb.msbuild\""
                }
            }
        }
        // stage("Build All") {
        //     steps {
        //         echo "Building All.."
        //         script {
        //             def buildProps = utilScript.getMSBuildParams(config.General)
        //             bat "msbuild.exe ${buildProps} /tv:4.0 /verbosity:normal \"common\\build_kb.msbuild\""
        //         }
        //     }
        // }
    }
}