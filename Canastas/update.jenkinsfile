def utilScript
def parametersScript
def config

pipeline {
    agent { label "win-genexus" }
    parameters {
        choice(name: "KBEnvironment", choices: ["EnvLocal", "EnvStable", "EnvRelease"], description: "Select KB Environment to Update")
    }
    stages {
        stage("Init") {
            steps {
                echo "Initializing.."
                script {
                    utilScript = load "jobs\\jenkinsfiles\\common\\util.groovy"
                    parametersScript = load "jobs\\jenkinsfiles\\CANASTAS\\parameters.groovy"
                    config = parametersScript.getForEnvironment(params.KBEnvironment)   
                }                
            }
        }        
        stage("Update KB") {
            steps {
                echo "Updating KB.."
                script {
                    withCredentials([
                        usernamePassword(
                        credentialsId: config.GXServer.GXServerCredentialsKey, 
                        usernameVariable: 'Username', 
                        passwordVariable: 'Password')
                        ]) {
                             
                        def buildProps = utilScript.getMSBuildParams(config.General) + 
                        utilScript.getMSBuildParams(config.GXServer) + 
                        utilScript.makeParam("GXServerUsername", Username) + 
                        utilScript.makeParam("GXServerPassword", Password)

                        bat "msbuild.exe ${buildProps} /tv:4.0 /verbosity:normal \"jobs\\jenkinsfiles\\common\\update_kb.msbuild\""                 
                        
                    }
                }
            }
        }
        stage("Set Properties") {
            steps {
                echo "Setting Properties.."
                script {
                    withCredentials([
                        usernamePassword(
                        credentialsId: config.Environment.GAMAdminCredentialKey, 
                        usernameVariable: 'AdminUsername', 
                        passwordVariable: 'AdminPassword'),
                        
                        usernamePassword(
                        credentialsId: config.Environment.GAMConnectionCredentialKey, 
                        usernameVariable: 'ConnectionUsername', 
                        passwordVariable: 'ConnectionPassword'),

                        usernamePassword(
                        credentialsId: config.General.DBCredentialKey, 
                        usernameVariable: 'user', 
                        passwordVariable: 'password')                        
                        ]) { 

                        config.Datastores.each { ds ->
               
                            def dsProps = utilScript.getMSBuildParams(config.General) + 
                            utilScript.makeParam("DatastoreName", ds.key) + 
                            utilScript.makeParam("DatastoreUsername", user) + 
                            utilScript.makeParam("DatastorePassword", password) + 
                            utilScript.getMSBuildParams(config.Datastores[ds.key])

                            bat "msbuild.exe ${dsProps} /tv:4.0 /verbosity:normal \"jobs\\jenkinsfiles\\common\\set_datastore_properties.msbuild\""
                        }    

                        def envProps = utilScript.getMSBuildParams(config.General) + 
                        utilScript.getMSBuildParams(config.Environment) + 
                        utilScript.makeParam("GAMAdminUsername", AdminUsername) + 
                        utilScript.makeParam("GAMAdminPassword", AdminPassword) +
                        utilScript.makeParam("GAMConnectionUsername", ConnectionUsername) + 
                        utilScript.makeParam("GAMConnectionPassword", ConnectionPassword)

                        bat "msbuild.exe ${envProps} /tv:4.0 /verbosity:normal \"jobs\\jenkinsfiles\\common\\set_environment_properties.msbuild\""
                       
                    }
                }
            }
        }
    }
}
