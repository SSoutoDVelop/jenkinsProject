def utilScript
def globalParameters
def parametersScript
def config

pipeline {
    agent any
    parameters {
        choice(name: "KBEnvironment", choices: ["EnvLocal", "EnvRelease"], description: "Select KB Environment to Deploy")
        choice(name: "BuildAndroid", choices: ["False", "True"], description: "Build Android Platform")
        choice(name: "BuildIOS", choices: ["False", "True"], description: "Build iOS Platform")
    }
    stages {
        stage("Init") {
            steps {
                echo "Initializing.."
                script {
                    utilScript = load "common\\util.groovy"
                    parametersScript = load "Canastas\\parameters.groovy"
                    config = parametersScript.getForEnvironment(params.KBEnvironment)
                }
            }            
        }
        stage("Update KB") {
            steps {
                echo "Updating KB.."
                script {

                    withCredentials([
                        usernamePassword(
                        credentialsId: config.GXServer.GXServerCredentialsKey, 
                        usernameVariable: 'Username', 
                        passwordVariable: 'Password')
                        ]) {
                             
                        def buildProps = utilScript.getMSBuildParams(config.General) + 
                        utilScript.getMSBuildParams(config.GXServer) + 
                        utilScript.makeParam("GXServerUsername", Username) + 
                        utilScript.makeParam("GXServerPassword", Password)

                        bat "msbuild.exe ${buildProps} /tv:4.0 /verbosity:normal \"common\\update_kb.msbuild\""                 
                        
                    }      
                }
            }
        }
        stage("Set Properties") {
            steps {
                echo "Setting Properties.."
                script {
                    withCredentials([
                        usernamePassword(
                        credentialsId: config.Environment.GAMAdminCredentialKey, 
                        usernameVariable: 'AdminUsername', 
                        passwordVariable: 'AdminPassword'),
                        
                        usernamePassword(
                        credentialsId: config.Environment.GAMConnectionCredentialKey, 
                        usernameVariable: 'ConnectionUsername', 
                        passwordVariable: 'ConnectionPassword')
                        ]) {        

                        def envProps = utilScript.getMSBuildParams(config.General) + 
                        utilScript.getMSBuildParams(config.Environment) + 
                        utilScript.makeParam("GAMAdminUsername", AdminUsername) + 
                        utilScript.makeParam("GAMAdminPassword", AdminPassword) +
                        utilScript.makeParam("GAMConnectionUsername", ConnectionUsername) + 
                        utilScript.makeParam("GAMConnectionPassword", ConnectionPassword)

                        bat "msbuild.exe ${envProps} /tv:4.0 /verbosity:normal \"common\\set_environment_properties.msbuild\""
                    }
                }
            }
        }
        stage("Build All") {
            steps {
                echo "Building All.."
                script {
                    def buildProps = utilScript.getMSBuildParams(config.General)
                    bat "msbuild.exe ${buildProps} /tv:4.0 /verbosity:normal \"common\\build_kb.msbuild\""
                }
            }
        }            
    }
}